<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on Christoph Hartmann</title>
    <link>https://lollyrock.com/tags/aws/</link>
    <description>Recent content in Aws on Christoph Hartmann</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://lollyrock.com/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting started with InSpec for AWS. Testing for the cloud!</title>
      <link>https://lollyrock.com/posts/inspec-cloud-aws-setup/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lollyrock.com/posts/inspec-cloud-aws-setup/</guid>
      <description>With the introduction of InSpec 2.0, we got the ability to test AWS environments. Within the next 5 minutes, you are ready to write InSpec tests to verify your AWS environment. Let&amp;rsquo;s start.
Background Dominik already introduced the new concepts of InSpec 2.0. He and I created InSpec for machine testing but abstracted InSpec&amp;rsquo;s test syntax from specific test targets. This is very helpful, since the same language can be used to describe tests for machine and api testing.</description>
    </item>
    
    <item>
      <title>Achieve compliance with AWS OpsWorks for Chef Automate</title>
      <link>https://lollyrock.com/posts/inspec-compliance-awsopsworks/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lollyrock.com/posts/inspec-compliance-awsopsworks/</guid>
      <description>This example demonstrates how to implement continuous compliance in AWS environments with InSpec, Chef and Chef Automate.
Overview The demo is based on a webinar presented by Mark Rambow and me. This post follows the pattern of the webinar by showcasing how continuous compliance is applied with AWS OpsWorks. Since OpsWorks is based on Chef Automate, it works very similar with Chef Automate standalone.
The example is split in three sections:</description>
    </item>
    
  </channel>
</rss>